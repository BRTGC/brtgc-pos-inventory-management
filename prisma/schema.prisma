// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma


generator client {
  provider = "prisma-client-js"
  previewFeatures = ["mongodb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String        @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  username     String
  email    String        @unique
  password String        // New field for password storage
  role     UserRole
  products UserProduct[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id                String        @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  description       String
  price             Float
  costPrice         Float          // Cost price for profit calculation
  sku               String         // Unique identifier (SKU)
  category          String         // Product category
  stock             Int            // Quantity in stock
  lowStockAlert     Int            // Low stock threshold
  dateAdded         DateTime       @default(now())  // Date product was added
  inventory         Inventory[]    // Relationship with Inventory
  users             UserProduct[]  // Relationship with UserProduct
}

model UserProduct {
  id        String @id @default(auto()) @map("_id") @db.ObjectId // Add a single ID field
  userId    String @db.ObjectId
  productId String @db.ObjectId

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

model Inventory {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  productId String   @db.ObjectId
  quantity  Int
  date      DateTime @default(now())

  product Product @relation(fields: [productId], references: [id])
}

enum UserRole {
  ADMIN
  USER
}
