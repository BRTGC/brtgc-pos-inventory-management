generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  username  String
  email     String        @unique
  password  String        // New field for password storage
  role      UserRole
  products  UserProduct[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model Product {
  id                String        @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  description       String
  price             Float
  costPrice         Float
  sku               String
  category          String
  stock             Int
  lowStockAlert     Int
  dateAdded         DateTime       @default(now())
  inventory         Inventory[]    // Relationship with Inventory
  users             UserProduct[]  // Relationship with UserProduct
  sales             SaleProduct[]  // Relationship with SaleProduct
}

model SaleProduct {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  productName String
  quantity    Int       @default(1) // Ensure quantity is at least 1
  sku         String
  product     Product   @relation(fields: [productId], references: [id]) // Define relation to Product
  productId   String    @db.ObjectId
  sale        Sales     @relation(fields: [saleId], references: [id])
  saleId      String    @db.ObjectId
  createdAt   DateTime  @default(now()) // Timestamp for when the product was added to the sale
}

model Sales {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  amount        Float
  createdAt     DateTime      @default(now())
  saleProducts  SaleProduct[]  // Relationship with SaleProduct
}

model UserProduct {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  userId    String @db.ObjectId
  productId String @db.ObjectId

  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Inventory {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  productId String   @db.ObjectId
  quantity  Int
  date      DateTime @default(now())

  product   Product @relation(fields: [productId], references: [id])
}

enum UserRole {
  ADMIN
  USER
}
